{
<<<<<<< HEAD
  "name": "paradigm-minimal",
  "version": "1.0.0",
  "description": "Minimal optimized paper trading system",
  "main": "index.js",
  "scripts": {
    "start": "ts-node src/index.ts",
    "paper-trade": "ts-node src/paper-trading.ts",
    "monitor": "ts-node src/monitor.ts",
    "backtest": "ts-node src/backtest.ts",
    "advanced-backtest": "ts-node src/advanced-comprehensive-backtest.ts",
    "comprehensive-130": "ts-node src/comprehensive-backtest-130.ts",
    "download-data": "ts-node src/download-data.ts",
    "download-instruments": "ts-node src/download-instruments.ts",
    "db:studio": "npx prisma studio --port 5556",
    "db:generate": "npx prisma generate",
    "db:push": "npx prisma db push",
    "db:reset": "npx prisma db push --force-reset",
    "db:migrate": "npx prisma migrate dev",
    "db:deploy": "npx prisma migrate deploy"
  },
  "dependencies": {
    "@prisma/client": "^5.0.0",
    "kiteconnect": "^5.1.0",
    "prisma": "^5.0.0",
    "ts-node": "^10.9.1",
    "typescript": "^5.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "ts-node-dev": "^2.0.0"
  },
  "keywords": [
    "trading",
    "paper-trading",
    "algorithmic-trading"
  ],
  "author": "Paradigm Trading",
  "license": "MIT"
=======
    "name": "paradigm-algo-trading-bot",
    "version": "1.0.0",
    "description": "Modular Node.js + TypeScript algo trading bot for Zerodha Kite Connect",
    "main": "dist/index.js",
    "scripts": {
        "build": "tsc",
        "start": "node dist/index.js",
        "dev": "ts-node src/index.ts",
        "test": "jest",
        "test:watch": "jest --watch",
        "test:coverage": "jest --coverage",
        "test:enhanced": "ts-node src/test-runner.ts",
        "test:all": "npm run test && npm run test:enhanced",
        "lint": "eslint src/**/*.ts",
        "lint:fix": "eslint src/**/*.ts --fix",
        "clean": "rm -rf dist",
        "prebuild": "npm run clean",
        "watch": "ts-node-dev --respawn src/index.ts",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate dev && npm run prisma:generate",
        "prisma:studio": "prisma studio",
        "db:setup": "ts-node src/database/setup.ts setup",
        "db:reset": "ts-node src/database/setup.ts reset",
        "db:seed": "ts-node src/database/setup.ts seed",
        "db:check": "ts-node src/database/setup.ts check",
        "db:test": "ts-node src/test-postgres-integration.ts",
        "tokens:all": "ts-node src/examples/simple-tokens-manager.ts",
        "trading:demo": "ts-node src/examples/complete-trading-integration.ts",
        "trading:simple": "ts-node src/examples/simple-trading-example.ts",
        "trading:automated": "ts-node src/examples/automated-trading-example.ts",
        "trading:live": "ts-node src/examples/live-data-integration-example.ts",
        "dashboard": "ts-node src/ui/run-dashboard.ts",
        "auth:example": "ts-node src/examples/auth-example.ts",
        "webhook:start": "ts-node src/webhooks/start-webhook.ts",
        "error:demo": "ts-node src/examples/error-handler-integration.ts",
        "error:test": "jest src/__tests__/error-handler.test.ts",
        "circuit:demo": "ts-node src/examples/circuit-breaker-integration.ts",
        "circuit:test": "jest src/__tests__/circuit-breaker.test.ts",
        "security:demo": "ts-node src/examples/security-validation-integration.ts",
        "security:test": "jest src/__tests__/security-validator.test.ts",
        "db:optimize:demo": "ts-node src/examples/database-optimization-integration.ts",
        "db:optimize:test": "jest src/__tests__/database-optimization.test.ts",
        "cache:demo": "ts-node src/examples/multi-level-cache-integration.ts",
        "cache:test": "jest src/__tests__/multi-level-cache.test.ts",
        "release": "standard-version",
        "changelog": "standard-version --dry-run --skip.commit --skip.tag",
        "pretest": "prisma generate"
    },
    "keywords": [
        "trading",
        "bot",
        "zerodha",
        "algo",
        "typescript"
    ],
    "author": "",
    "license": "MIT",
    "dependencies": {
        "@nestjs/swagger": "^11.2.0",
        "@prisma/client": "^6.12.0",
        "@types/express-rate-limit": "^5.1.3",
        "axios": "^1.6.0",
        "blessed": "^0.1.81",
        "blessed-contrib": "^4.11.0",
        "config": "^4.0.1",
        "convict": "^6.2.4",
        "dotenv": "^16.6.1",
        "eventemitter2": "^6.4.9",
        "express": "^4.21.2",
        "express-rate-limit": "^8.0.1",
        "ioredis": "^5.6.1",
        "kiteconnect": "^5.0.1",
        "lodash": "^4.17.21",
        "mathjs": "^14.5.3",
        "ml-matrix": "^6.12.1",
        "moment": "^2.29.4",
        "ngrok": "^5.0.0-beta.2",
        "node-cron": "^3.0.3",
        "open": "^10.2.0",
        "pg": "^8.11.3",
        "pino": "^9.7.0",
        "pino-pretty": "^13.0.0",
        "puppeteer": "^23.0.2",
        "redis": "^5.6.0",
        "simple-statistics": "^7.8.8",
        "speakeasy": "^2.0.0",
        "swagger-ui-express": "^5.0.1",
        "technicalindicators": "^3.1.0",
        "winston": "^3.17.0",
        "winston-daily-rotate-file": "^5.0.0",
        "ws": "^8.14.2",
        "yamljs": "^0.3.0",
        "zod": "^4.0.5"
    },
    "devDependencies": {
        "@types/blessed": "^0.1.25",
        "@types/express": "^4.17.21",
        "@types/jest": "^29.5.14",
        "@types/lodash": "^4.17.20",
        "@types/node": "^20.8.10",
        "@types/node-cron": "^3.0.11",
        "@types/pg": "^8.10.7",
        "@types/ws": "^8.5.8",
        "@types/yamljs": "^0.2.34",
        "@typescript-eslint/eslint-plugin": "^6.21.0",
        "@typescript-eslint/parser": "^6.21.0",
        "eslint": "^8.57.1",
        "jest": "^29.7.0",
        "postman-collection-generator": "^0.0.1",
        "prisma": "^6.12.0",
        "standard-version": "^9.5.0",
        "ts-jest": "^29.4.0",
        "ts-node": "^10.9.1",
        "ts-node-dev": "^2.0.0",
        "typescript": "^5.2.2"
    }
>>>>>>> 176e79a3444e6c15f5b39fd914859712a1b50345
}
